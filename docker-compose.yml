version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15
    container_name: he-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hackerexperience
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-setup.sql:/docker-entrypoint-initdb.d/01-setup.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: he-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # HackerExperience Rust backend (when ready)
  app:
    build: .
    container_name: he-app
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://he_app:secure_password_change_in_production@postgres:5432/hackerexperience
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./frontend:/app/frontend:ro
    profiles:
      - app  # Only start when explicitly requested

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    driver: bridge