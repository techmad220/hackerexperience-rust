/* HackerExperience - Modern Game UI Styles */

:root {
  --primary-green: #00ff41;
  --dark-green: #00cc33;
  --bg-dark: #0a0a0a;
  --bg-darker: #050505;
  --text-primary: #00ff41;
  --text-secondary: #00cc33;
  --text-dim: #008f26;
  --border-color: #00ff41;
  --error-red: #ff3333;
  --warning-yellow: #ffcc00;
  --info-blue: #00ccff;
  --glass-bg: rgba(0, 0, 0, 0.7);
  --glass-border: rgba(0, 255, 65, 0.3);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: var(--bg-darker);
  color: var(--text-primary);
  font-family: 'Fira Code', 'Courier New', monospace;
  min-height: 100vh;
  overflow-x: hidden;
  position: relative;
}

/* Matrix rain background effect */
.matrix-bg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
  opacity: 0.05;
}

.matrix-column {
  position: absolute;
  top: -100%;
  font-size: 14px;
  line-height: 14px;
  animation: matrix-fall linear infinite;
}

@keyframes matrix-fall {
  to {
    transform: translateY(200vh);
  }
}

/* Main game container */
.game-container {
  max-width: 1920px;
  margin: 0 auto;
  padding: 20px;
  min-height: 100vh;
  display: grid;
  grid-template-columns: 250px 1fr 300px;
  gap: 20px;
}

/* Glass morphism panels */
.panel {
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  border-radius: 8px;
  padding: 20px;
  position: relative;
  overflow: hidden;
  animation: panel-glow 3s ease-in-out infinite;
}

@keyframes panel-glow {
  0%, 100% {
    box-shadow: 0 0 20px rgba(0, 255, 65, 0.2);
  }
  50% {
    box-shadow: 0 0 30px rgba(0, 255, 65, 0.4);
  }
}

.panel::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, transparent, var(--primary-green), transparent);
  z-index: -1;
  opacity: 0;
  transition: opacity 0.3s;
  animation: border-pulse 2s linear infinite;
}

.panel:hover::before {
  opacity: 1;
}

@keyframes border-pulse {
  0%, 100% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Terminal window */
.terminal {
  background: #000;
  border: 2px solid var(--border-color);
  border-radius: 8px;
  overflow: hidden;
  font-family: 'Fira Code', monospace;
  animation: terminal-flicker 0.1s infinite;
}

@keyframes terminal-flicker {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.98;
  }
  100% {
    opacity: 1;
  }
}

.terminal-header {
  background: var(--dark-green);
  padding: 8px 15px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.terminal-title {
  font-weight: bold;
  text-shadow: 0 0 10px var(--primary-green);
}

.terminal-controls {
  display: flex;
  gap: 8px;
}

.terminal-btn {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.3s;
}

.terminal-btn:hover {
  transform: scale(1.2);
  filter: brightness(1.5);
}

.terminal-btn.close {
  background: #ff3333;
}

.terminal-btn.minimize {
  background: #ffcc00;
}

.terminal-btn.maximize {
  background: #00ff41;
}

.terminal-body {
  padding: 15px;
  min-height: 200px;
  max-height: 500px;
  overflow-y: auto;
  background: rgba(0, 0, 0, 0.9);
}

.terminal-line {
  margin: 5px 0;
  animation: type-in 0.5s steps(30, end);
}

@keyframes type-in {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

.terminal-prompt {
  color: var(--primary-green);
  margin-right: 10px;
}

.terminal-input {
  background: transparent;
  border: none;
  color: var(--text-primary);
  outline: none;
  font-family: inherit;
  font-size: inherit;
  width: 80%;
  caret-color: var(--primary-green);
}

.terminal-cursor {
  display: inline-block;
  width: 10px;
  height: 20px;
  background: var(--primary-green);
  animation: cursor-blink 1s infinite;
}

@keyframes cursor-blink {
  0%, 50% {
    opacity: 1;
  }
  51%, 100% {
    opacity: 0;
  }
}

/* Process list with animations */
.process-list {
  list-style: none;
}

.process-item {
  background: rgba(0, 255, 65, 0.05);
  border: 1px solid var(--glass-border);
  border-radius: 4px;
  padding: 12px;
  margin-bottom: 10px;
  transition: all 0.3s;
  animation: slide-in 0.5s ease-out;
  position: relative;
  overflow: hidden;
}

@keyframes slide-in {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.process-item:hover {
  background: rgba(0, 255, 65, 0.1);
  transform: translateX(5px);
  box-shadow: 0 0 20px rgba(0, 255, 65, 0.3);
}

.process-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(0, 255, 65, 0.2), transparent);
  animation: process-scan 3s linear infinite;
}

@keyframes process-scan {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

.process-header {
  display: flex;
  justify-content: space-between;
  margin-bottom: 8px;
}

.process-name {
  font-weight: bold;
  color: var(--text-primary);
  text-shadow: 0 0 5px var(--primary-green);
}

.process-status {
  padding: 2px 8px;
  border-radius: 4px;
  font-size: 12px;
  text-transform: uppercase;
  font-weight: bold;
}

.process-status.running {
  background: rgba(0, 255, 65, 0.2);
  color: var(--primary-green);
  animation: status-pulse 1s infinite;
}

.process-status.completed {
  background: rgba(0, 204, 51, 0.2);
  color: var(--dark-green);
}

.process-status.failed {
  background: rgba(255, 51, 51, 0.2);
  color: var(--error-red);
}

@keyframes status-pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

.progress-bar {
  background: rgba(0, 0, 0, 0.5);
  border: 1px solid var(--glass-border);
  border-radius: 4px;
  height: 20px;
  overflow: hidden;
  position: relative;
}

.progress-fill {
  background: linear-gradient(90deg, var(--dark-green), var(--primary-green));
  height: 100%;
  transition: width 0.3s ease;
  position: relative;
  overflow: hidden;
}

.progress-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  animation: progress-shine 2s linear infinite;
}

@keyframes progress-shine {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.progress-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 12px;
  font-weight: bold;
  text-shadow: 0 0 5px rgba(0, 0, 0, 0.8);
}

/* Network visualization */
.network-map {
  background: radial-gradient(circle at center, rgba(0, 255, 65, 0.05), transparent);
  border: 1px solid var(--glass-border);
  border-radius: 8px;
  padding: 20px;
  min-height: 400px;
  position: relative;
  overflow: hidden;
}

.network-node {
  position: absolute;
  width: 40px;
  height: 40px;
  background: var(--glass-bg);
  border: 2px solid var(--primary-green);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s;
  animation: node-pulse 2s infinite;
}

@keyframes node-pulse {
  0%, 100% {
    box-shadow: 0 0 10px rgba(0, 255, 65, 0.5);
  }
  50% {
    box-shadow: 0 0 20px rgba(0, 255, 65, 0.8);
  }
}

.network-node:hover {
  transform: scale(1.2);
  background: rgba(0, 255, 65, 0.1);
  z-index: 10;
}

.network-node.player {
  border-color: var(--info-blue);
  animation: player-glow 1s infinite;
}

@keyframes player-glow {
  0%, 100% {
    box-shadow: 0 0 20px var(--info-blue);
  }
  50% {
    box-shadow: 0 0 30px var(--info-blue);
  }
}

.network-node.target {
  border-color: var(--error-red);
}

.network-connection {
  position: absolute;
  height: 2px;
  background: linear-gradient(90deg, transparent, var(--primary-green), transparent);
  transform-origin: left center;
  animation: connection-flow 2s linear infinite;
}

@keyframes connection-flow {
  0% {
    background-position: -100% 0;
  }
  100% {
    background-position: 100% 0;
  }
}

/* Buttons with cyber effect */
.cyber-btn {
  background: linear-gradient(45deg, var(--dark-green), var(--primary-green));
  border: none;
  color: var(--bg-dark);
  padding: 12px 24px;
  font-family: inherit;
  font-weight: bold;
  text-transform: uppercase;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: all 0.3s;
  letter-spacing: 1px;
}

.cyber-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
  transition: left 0.5s;
}

.cyber-btn:hover::before {
  left: 100%;
}

.cyber-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 20px rgba(0, 255, 65, 0.4);
  text-shadow: 0 0 10px var(--primary-green);
}

.cyber-btn:active {
  transform: translateY(0);
  box-shadow: 0 5px 10px rgba(0, 255, 65, 0.4);
}

.cyber-btn.danger {
  background: linear-gradient(45deg, #cc0000, #ff3333);
}

.cyber-btn.warning {
  background: linear-gradient(45deg, #cc9900, #ffcc00);
}

/* Notification system */
.notification {
  position: fixed;
  top: 20px;
  right: 20px;
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  border-radius: 8px;
  padding: 15px 20px;
  min-width: 300px;
  animation: notification-slide 0.5s ease-out;
  z-index: 1000;
}

@keyframes notification-slide {
  from {
    transform: translateX(400px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.notification.success {
  border-color: var(--primary-green);
  box-shadow: 0 0 20px rgba(0, 255, 65, 0.5);
}

.notification.error {
  border-color: var(--error-red);
  box-shadow: 0 0 20px rgba(255, 51, 51, 0.5);
}

.notification.warning {
  border-color: var(--warning-yellow);
  box-shadow: 0 0 20px rgba(255, 204, 0, 0.5);
}

.notification.info {
  border-color: var(--info-blue);
  box-shadow: 0 0 20px rgba(0, 204, 255, 0.5);
}

/* Loading animation */
.loader {
  width: 50px;
  height: 50px;
  border: 3px solid var(--glass-border);
  border-top-color: var(--primary-green);
  border-radius: 50%;
  animation: loader-spin 1s linear infinite;
}

@keyframes loader-spin {
  to {
    transform: rotate(360deg);
  }
}

/* Glitch effect for errors */
.glitch {
  position: relative;
  animation: glitch-skew 1s infinite linear alternate-reverse;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch::before {
  animation: glitch-1 0.5s infinite;
  color: var(--error-red);
  z-index: -1;
}

.glitch::after {
  animation: glitch-2 0.5s infinite;
  color: var(--info-blue);
  z-index: -2;
}

@keyframes glitch-skew {
  0% {
    transform: skew(0deg);
  }
  20% {
    transform: skew(2deg);
  }
  40% {
    transform: skew(-2deg);
  }
  60% {
    transform: skew(1deg);
  }
  80% {
    transform: skew(-1deg);
  }
  100% {
    transform: skew(0deg);
  }
}

@keyframes glitch-1 {
  0%, 100% {
    clip-path: inset(0 0 0 0);
    transform: translate(0);
  }
  20% {
    clip-path: inset(20% 0 30% 0);
    transform: translate(-2px, 2px);
  }
  40% {
    clip-path: inset(50% 0 20% 0);
    transform: translate(2px, -2px);
  }
  60% {
    clip-path: inset(10% 0 60% 0);
    transform: translate(-1px, 1px);
  }
  80% {
    clip-path: inset(70% 0 10% 0);
    transform: translate(1px, -1px);
  }
}

@keyframes glitch-2 {
  0%, 100% {
    clip-path: inset(0 0 0 0);
    transform: translate(0);
  }
  20% {
    clip-path: inset(30% 0 40% 0);
    transform: translate(2px, -2px);
  }
  40% {
    clip-path: inset(10% 0 70% 0);
    transform: translate(-2px, 2px);
  }
  60% {
    clip-path: inset(60% 0 15% 0);
    transform: translate(1px, -1px);
  }
  80% {
    clip-path: inset(25% 0 50% 0);
    transform: translate(-1px, 1px);
  }
}

/* Responsive design */
@media (max-width: 1200px) {
  .game-container {
    grid-template-columns: 200px 1fr;
  }

  .sidebar-right {
    display: none;
  }
}

@media (max-width: 768px) {
  .game-container {
    grid-template-columns: 1fr;
    padding: 10px;
  }

  .sidebar-left {
    position: fixed;
    left: -250px;
    top: 0;
    height: 100vh;
    z-index: 999;
    transition: left 0.3s;
  }

  .sidebar-left.open {
    left: 0;
  }
}